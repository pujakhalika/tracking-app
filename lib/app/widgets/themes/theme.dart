import 'package:flutter/material.dart';
import 'package:flex_color_scheme/flex_color_scheme.dart';

//  Using Espresso and Crema Color Pallete Theme
class AppTheme {
  // Dark Theme
  static final ThemeData darkTheme = FlexColorScheme.dark(
    fontFamily: 'HinaMincho',
    surfaceMode: FlexSurfaceMode.levelSurfacesLowScaffold,
    blendLevel: 13,
    scheme: FlexScheme.espresso,
    subThemesData: const FlexSubThemesData(
      blendOnLevel: 20,
      useTextTheme: true,
      useM2StyleDividerInM3: true,
      inputDecoratorBorderType: FlexInputBorderType.underline,
      inputDecoratorUnfocusedBorderIsColored: false,
      navigationBarSelectedLabelSchemeColor: SchemeColor.onSurface,
      navigationBarUnselectedLabelSchemeColor: SchemeColor.onSurface,
      navigationBarMutedUnselectedLabel: false,
      navigationBarSelectedIconSchemeColor: SchemeColor.onSurface,
      navigationBarUnselectedIconSchemeColor: SchemeColor.onSurface,
      navigationBarMutedUnselectedIcon: false,
      navigationBarIndicatorSchemeColor: SchemeColor.secondaryContainer,
      navigationBarIndicatorOpacity: 1.00,
      navigationRailSelectedLabelSchemeColor: SchemeColor.onSurface,
      navigationRailUnselectedLabelSchemeColor: SchemeColor.onSurface,
      navigationRailMutedUnselectedLabel: false,
      navigationRailSelectedIconSchemeColor: SchemeColor.onSurface,
      navigationRailUnselectedIconSchemeColor: SchemeColor.onSurface,
      navigationRailMutedUnselectedIcon: false,
      navigationRailIndicatorSchemeColor: SchemeColor.secondaryContainer,
      navigationRailIndicatorOpacity: 1.00,
      navigationRailBackgroundSchemeColor: SchemeColor.surface,
      navigationRailLabelType: NavigationRailLabelType.none,
    ),
    visualDensity: FlexColorScheme.comfortablePlatformDensity,
    useMaterial3: true,
    useMaterial3ErrorColors: true,
    swapLegacyOnMaterial3: true,
  ).toTheme;

// Dark Color
  static const ColorScheme flexSchemeDark = ColorScheme(
    brightness: Brightness.dark,
    primary: Color(0xff8d7f7d),
    onPrimary: Color(0xfffaf8f8),
    primaryContainer: Color(0xff452f2b),
    onPrimaryContainer: Color(0xffeae7e6),
    secondary: Color(0xfff8ecd4),
    onSecondary: Color(0xff141414),
    secondaryContainer: Color(0xff705d49),
    onSecondaryContainer: Color(0xfff1eeeb),
    tertiary: Color(0xffeed6a6),
    onTertiary: Color(0xff141411),
    tertiaryContainer: Color(0xff8e774f),
    onTertiaryContainer: Color(0xfff6f2ec),
    error: Color(0xffffb4ab),
    onError: Color(0xff690005),
    errorContainer: Color(0xff93000a),
    onErrorContainer: Color(0xffffb4ab),
    background: Color(0xff171616),
    onBackground: Color(0xffececec),
    surface: Color(0xff171616),
    onSurface: Color(0xffececec),
    surfaceVariant: Color(0xff3b3939),
    onSurfaceVariant: Color(0xffe0dfdf),
    outline: Color(0xff797979),
    outlineVariant: Color(0xff2d2d2d),
    shadow: Color(0xff000000),
    scrim: Color(0xff000000),
    inverseSurface: Color(0xfff9f8f8),
    onInverseSurface: Color(0xff131313),
    inversePrimary: Color(0xff4b4544),
    surfaceTint: Color(0xff8d7f7d),
  );

// Light Color
  static const ColorScheme flexSchemeLight = ColorScheme(
    brightness: Brightness.light,
    primary: Color(0xff452f2b),
    onPrimary: Color(0xffffffff),
    primaryContainer: Color(0xffc7bcac),
    onPrimaryContainer: Color(0xff11100f),
    secondary: Color(0xfff5e9c9),
    onSecondary: Color(0xff000000),
    secondaryContainer: Color(0xfffee7ad),
    onSecondaryContainer: Color(0xff14130f),
    tertiary: Color(0xffe3b964),
    onTertiary: Color(0xff000000),
    tertiaryContainer: Color(0xffffde9c),
    onTertiaryContainer: Color(0xff14120d),
    error: Color(0xffba1a1a),
    onError: Color(0xffffffff),
    errorContainer: Color(0xffffdad6),
    onErrorContainer: Color(0xff410002),
    background: Color(0xfff9f9f9),
    onBackground: Color(0xff090909),
    surface: Color(0xfff9f9f9),
    onSurface: Color(0xff090909),
    surfaceVariant: Color(0xffe4e3e3),
    onSurfaceVariant: Color(0xff111111),
    outline: Color(0xff7c7c7c),
    outlineVariant: Color(0xffc8c8c8),
    shadow: Color(0xff000000),
    scrim: Color(0xff000000),
    inverseSurface: Color(0xff121111),
    onInverseSurface: Color(0xfff5f5f5),
    inversePrimary: Color(0xffc1b1ae),
    surfaceTint: Color(0xff452f2b),
  );

  // Light Theme
  static final ThemeData lightTheme = FlexColorScheme.light(
    fontFamily: 'HinaMincho',
    surfaceMode: FlexSurfaceMode.levelSurfacesLowScaffold,
    blendLevel: 7,
    scheme: FlexScheme.espresso,
    subThemesData: const FlexSubThemesData(
      blendOnLevel: 10,
      blendOnColors: false,
      useTextTheme: true,
      useM2StyleDividerInM3: true,
      inputDecoratorBorderType: FlexInputBorderType.underline,
      inputDecoratorUnfocusedBorderIsColored: false,
      navigationBarSelectedLabelSchemeColor: SchemeColor.onSurface,
      navigationBarUnselectedLabelSchemeColor: SchemeColor.onSurface,
      navigationBarMutedUnselectedLabel: false,
      navigationBarSelectedIconSchemeColor: SchemeColor.onSurface,
      navigationBarUnselectedIconSchemeColor: SchemeColor.onSurface,
      navigationBarMutedUnselectedIcon: false,
      navigationBarIndicatorSchemeColor: SchemeColor.secondaryContainer,
      navigationBarIndicatorOpacity: 1.00,
      navigationRailSelectedLabelSchemeColor: SchemeColor.onSurface,
      navigationRailUnselectedLabelSchemeColor: SchemeColor.onSurface,
      navigationRailMutedUnselectedLabel: false,
      navigationRailSelectedIconSchemeColor: SchemeColor.onSurface,
      navigationRailUnselectedIconSchemeColor: SchemeColor.onSurface,
      navigationRailMutedUnselectedIcon: false,
      navigationRailIndicatorSchemeColor: SchemeColor.secondaryContainer,
      navigationRailIndicatorOpacity: 1.00,
      navigationRailBackgroundSchemeColor: SchemeColor.surface,
      navigationRailLabelType: NavigationRailLabelType.none,
    ),
    visualDensity: FlexColorScheme.comfortablePlatformDensity,
    useMaterial3: true,
    useMaterial3ErrorColors: true,
    swapLegacyOnMaterial3: true,
  ).toTheme;
}
